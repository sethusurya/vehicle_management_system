CREATE OR REPLACE EDITIONABLE PACKAGE PKG_TRANSACTION   AS 
    
    FUNCTION BODY_TRANSACTION_CHECK( 
        vSTATUS IN TRANSACTION.STATUS%type, 
        vTOTAL_COST IN TRANSACTION.TOTAL_COST%type
       ) 
    RETURN VARCHAR2;
    PROCEDURE BODY_TRANSACTION_INSERT(vSTATUS IN VARCHAR2, vTOTAL_COST IN FLOAT);
    PROCEDURE BODY_TRANSACTION_INSERT_TABLE(vSTATUS IN VARCHAR2, vTOTAL_COST IN FLOAT);
END PKG_TRANSACTION;
/

CREATE OR REPLACE EDITIONABLE PACKAGE BODY PKG_TRANSACTION AS
    PROCEDURE BODY_TRANSACTION_INSERT(vSTATUS IN VARCHAR2, vTOTAL_COST IN FLOAT) AS
    Conditions VARCHAR2(244);
    BEGIN
        Select BODY_TRANSACTION_CHECK(vSTATUS, vTOTAL_COST) INTO Conditions from dual;
        if Conditions = 'YES' THEN
             BODY_TRANSACTION_INSERT_TABLE(vSTATUS, vTOTAL_COST);
        end if;
    END BODY_TRANSACTION_INSERT;
    
    PROCEDURE BODY_TRANSACTION_INSERT_TABLE(vSTATUS IN VARCHAR2, vTOTAL_COST IN FLOAT) AS
    temp_trans_id TRANSACTION.TRANSACTION_ID%type;
    BEGIN
        select 'T_'|| TRANSACTION_ID_SEQ.nextval INTO temp_trans_id FROM dual;
        INSERT INTO TRANSACTION (TRANSACTION_ID, STATUS, TOTAL_COST) VALUES (temp_trans_id, vSTATUS, vTOTAL_COST);
    END BODY_TRANSACTION_INSERT_TABLE; 
    
    FUNCTION BODY_TRANSACTION_CHECK(
        vSTATUS IN TRANSACTION.STATUS%type, 
        vTOTAL_COST IN TRANSACTION.TOTAL_COST%type
       ) 
    RETURN VARCHAR2 AS
        INVALID_STATUS EXCEPTION;
        INVALID_TOTAL_COST EXCEPTION;
        
    BEGIN
            
        IF(NOT VALIDATE_CONVERSION(vTOTAL_COST AS NUMBER) = 1) THEN
            RAISE INVALID_TOTAL_COST;
        END IF;
        
        if vSTATUS is NULL or LENGTH(TRIM(vSTATUS)) is NULL then
            raise INVALID_STATUS;
        end if;
           
        if vTOTAL_COST is NULL or  LENGTH(vTOTAL_COST) = 0 then
            raise INVALID_TOTAL_COST;
        end if;
        
        RETURN 'YES';
    
    EXCEPTION
        when INVALID_STATUS then
            dbms_output.put_line('Invalid STATUS !!!');
            RETURN 'NO';
        when INVALID_TOTAL_COST then
            dbms_output.put_line('Invalid total cost !!!');
            RETURN 'NO';
    END BODY_TRANSACTION_CHECK;
END PKG_TRANSACTION;

--FUNCTION CALL
--EXECUTE PKG_TRANSACTION.BODY_TRANSACTION_INSERT('abc', 10);